


# Git Release

A Git Workflow Utility Scripts.


## Basic Concept



### Master Branch


### Develop Branch


### Feature Branch

A feature branch may branch off from `develop` branch,

If a feature branch is finished, the branch can be merged into develop (if it's a small feature).

Or it should be merged into `release` branch, and be renamed with ready/ prefix.


To create a feature branch from current branch:

    $ git feature [feature name]

To create a feature branch from a branch:

    $ git feature [feature name] [your branch]




### Hotfix Branch

May branch off from `master`,

Must merge back into `develop` and `master`.


To create a hotfix branch from master:

    $ git hotfix [hotfix name]

This is not recommended, but you can still create a hotfix branch from a specified branch, 
if your production branch is not named master,

    $ git hotfix [hotfix name] your_branch

### Release Branch

A release branch may branch off from `develop`, and must merge back into: `develop` & `master`.

Branch naming convention: `release-*`


To create a release branch (should be branched from develop)

    $ git release new [version name]

Once your release branch is ready, you can run release.

    $ git release

The git release steps are followed below,

* Move current ready/ branches into released.
* Merge current release branch into master.
* Delete current release branch.
* Tag a release version on master.
* Rebase master branch onto `develop` branch.


### Release Ready Branch

When your feature branch or hotfix branch are ready to go, move into ready/ directory,
and the branch will be merged into current release branch for testing.

To move current branch to ready/:

    $ git ready

To move specified branch to ready/:

    $ git ready [branch name]

To setup specified branch to ready, and merge into specified branch (master or develop)

    $ git ready [branch name] --merge [target branches]

For example, to setup hotfix-3011 branch to ready, and merge into master, develop branches:

    $ git ready hotfix-3011 --merge master,develop


Steps are followed below:

* Move local branch to ready/
* Prune remote branches.
* Merge into current release branch.

# Reference

http://nvie.com/posts/a-successful-git-branching-model/

http://reinh.com/blog/2009/03/02/a-git-workflow-for-agile-teams.html
